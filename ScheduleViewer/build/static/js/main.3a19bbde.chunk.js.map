{"version":3,"sources":["Task.js","Hour.js","Day.js","App.js","serviceWorker.js","index.js"],"names":["Task","taskDetails","push","className","this","props","task","i","length","clause","includes","link","split","target","href","resultHtml","str","sum","charCodeAt","Math","pow","colors","getColorfromString","abs","parseFloat","style","backgroundColor","color","oppGetColorfromString","reverse","join","constructTask","Component","Hour","state","class","Tasks","times","tasks","timeArr","trim","time","parseInt","minIndex","getMinIndex","arr","result","active","getClassName","constructHours","Day","updateHours","boolTable","Date","getHours","setState","hourTasks","setInterval","distributeHourlyTask","tags","title","hour","App","UpdateDay","day","getDay","allTasks","map","Map","set","daysArray","clauses","taskString","item","timeClause","dayIndex","dayTask","element","get","id","constructDays","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a19bbde.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\n// props:\r\n//\ttask: []\r\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n\r\nclass Task extends Component {\r\n\r\n\r\n\tconstructTask() {\r\n\t\t// console.log(this.props.task);\r\n\r\n\t\tlet taskDetails = [];\r\n\t\ttaskDetails.push(\r\n\t\t\t<div className=\"t_time\">{this.props.task[1]}</div>\r\n\t\t);\r\n\t\tfor (let i = 2; i < this.props.task.length; i++) {\r\n\t\t\tlet clause = this.props.task[i];\r\n\t\t\tif (clause.includes(\"->\")) {\r\n\t\t\t\tlet link = clause.split(\"->\");\r\n\t\t\t\ttaskDetails.push(\r\n\t\t\t\t\t<a target=\"blank\" href={link[1]}>{link[0]}</a>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\ttaskDetails.push(\r\n\t\t\t\t\t<div className=\"t_note\">{clause}</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet resultHtml = [];\r\n\t\tresultHtml.push(\r\n\t\t\t<div className=\"t_title\">{this.props.task[0]}</div>\r\n\t\t);\r\n\t\tresultHtml.push(\r\n\t\t\t\t<div className=\"t_detail\">\r\n\t\t\t\t\t{taskDetails}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\treturn resultHtml;\r\n\t}\r\n\r\n\tgetColorfromString(str) {\r\n\t\tlet sum = 0;\r\n\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\tsum += str.charCodeAt(i) * Math.pow(10, i);\r\n\t\t}\r\n\t\tlet r = sum % 255;\r\n\t\tlet g = sum / 1000 % 255;\r\n\t\tlet b = sum / 1000000 % 255;\r\n\t\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n\t}\r\n\toppGetColorfromString(str) {\r\n\t\tlet rgb = this.getColorfromString(str);\r\n\t\tlet colors = rgb.split(\"(\")[1].split(\")\")[0].split(\",\");\r\n\t\t// console.log(rgb.split(\"(\")[1].split(\")\")[0]);\r\n\t\tlet R = Math.abs(255 - parseFloat(colors[0]));\r\n\t\tlet G = Math.abs(255 - parseFloat(colors[1]));\r\n\t\tlet B = Math.abs(255 - parseFloat(colors[2]));\r\n\t\treturn \"rgb(\" + R + \",\" + G + \",\" + B + \")\";\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Task\" \r\n\t\t\t\tstyle={{backgroundColor: this.getColorfromString(this.props.task[0]),\r\n\t\t\t\t\tcolor: this.oppGetColorfromString(this.props.task[0].split().reverse().join())}}>\r\n\t\t\t\t{this.constructTask()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Task;\r\n","import React, {Component} from 'react';\r\nimport Task from \"./Task\";\r\n\r\n\r\n// props:\r\n//\tactive : bool\r\n//\ttasks\r\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n\r\nclass Hour extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tclass: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconstructHours() {\r\n\t\t// make a list of Task obj\r\n\t\tlet Tasks = [];\r\n\t\tlet times = [];\r\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\r\n\t\t\tlet task = this.props.tasks[i];\r\n\t\t\tlet timeArr = task[1].split(\"-\")[0].trim().split(\":\");\r\n\t\t\t// console.log(timeArr);\r\n\t\t\tlet time = parseInt(timeArr[0]) * 60 + parseInt(timeArr[1]);\r\n\t\t\ttimes.push(time);\r\n\t\t}\r\n\t\t\r\n\r\n\t\tfor (let i = 0; i < this.props.tasks.length; i++) {\r\n\t\t\tlet minIndex = this.getMinIndex(times);\r\n\r\n\t\t\tlet task = this.props.tasks[minIndex];\r\n\t\t\tTasks.push(\r\n\t\t\t\t\t<Task task={task}/>\r\n\t\t\t\t);\r\n\t\t\ttimes[minIndex] = 24 * 60;\r\n\t\t}\r\n\t\t// console.log(this.props.tasks);\r\n\t\treturn Tasks;\r\n\t}\r\n\tgetMinIndex(arr) {\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tif (arr[result] > arr[i]) {\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tgetClassName() {\r\n\t\tif (this.props.active) {\r\n\t\t\treturn \"active\";\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Hour \" + this.getClassName()}>\r\n\t\t\t\t{this.constructHours()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Hour;\r\n","import React, {Component} from 'react';\r\nimport Hour from \"./Hour\";\r\n\r\n// props:\r\n//\ttasks: []\r\n//\t- element:  [\"CSE 312 A\", \"9:30-10:20\", \"Zoom -> https\", \"adwwadawd\"]\r\n\r\nclass Day extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tactive: [],\r\n\t\t\thourTasks: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// this.updateHours();\r\n\t\tlet boolTable = [];\r\n\t\tfor (let i = 0; i < 24; i++) {\r\n\t\t\tboolTable[i] = false;\r\n\t\t}\r\n\t\tthis.setState({active: boolTable});\r\n\t\tthis.updateHours();\r\n\t\tsetInterval(this.updateHours, 5000);\r\n\t\tthis.distributeHourlyTask();\r\n\t}\r\n\r\n\tdistributeHourlyTask() {\r\n\t\t// \"CSE 473 A\", \"2:30-3:20\", \"Ed -> https://us.edstem.org/courses/407/discussion/\"\r\n\t\t// 13 hours!\r\n\t\t// 7 ==>> 0\r\n\t\tlet hourTasks = [];\r\n\t\tfor (let i = 0; i < 13; i++) {\r\n\t\t\thourTasks.push([]);\r\n\t\t}\r\n\t\tfor (let task of this.props.tasks) {\r\n\t\t\tlet startHour = task[1].split(\"-\")[0].split(\":\")[0] - 7;\r\n\t\t\thourTasks[startHour].push(task);\r\n\t\t\t// hourTasks[startHour].push(task); // debug\r\n\t\t}\r\n\r\n\t\tthis.setState({hourTasks: hourTasks});\r\n\t\t// console.log(hourTasks);\r\n\t}\r\n\r\n\r\n\r\n\tupdateHours = () => {\r\n\t\t// only update if is active\r\n\t\tif (this.props.active) {\r\n\t\t\t// console.log(\"updating\");\r\n\t\t\tlet boolTable = [];\r\n\t\t\tfor (let i = 0; i < 24; i++) {\r\n\t\t\t\tboolTable[i] = false;\r\n\t\t\t}\r\n\t\t\tlet hour = new Date().getHours();\r\n\t\t\tboolTable[hour] = true;\r\n\t\t\tthis.setState({active: boolTable});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconstructHours() {\r\n\t\tif (this.state.hourTasks.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tags = [];\t\t\r\n\t\ttags.push(<div className=\"d_title\"><div>{this.props.title}</div></div>);\r\n\t\tfor (let i = 7; i < 20; i++) {\r\n\t\t\ttags.push(\r\n\t\t\t\t<Hour active={this.state.active[i]} hour={i} tasks={this.state.hourTasks[i-7]}/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn tags;\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Day\">\r\n\t\t\t\t{this.constructHours()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Day;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Day from \"./Day\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTasks: [],\n      active: []\n    };\n  }\n\n\n  // todo: figuring out how to read in a file \n  componentDidMount() {\n    let tasks = [\n      \"CSE 312 A | Mon Wed Fri 9:30-10:20 | Zoom -> https://washington.zoom.us/j/376298892 | Course Page -> https://courses.cs.washington.edu/courses/cse312/20sp/index.html | Ed -> https://us.edstem.org/courses/377/discussion/ | gradescope -> https://www.gradescope.com/courses/108804\",\n      \"CSE 312 AC | Thu 10:30-11:20 | Zoom -> https://washington.zoom.us/j/587576087 | Zoom new -> https://washington.zoom.us/j/742702292\",\n      \"CSE 344 A | Mon Wed Fri 13:30-14:20 | Piazza -> https://piazza.com/washington/spring2020/cse344/home | Course Page -> http://cs.washington.edu/344 | Zoom -> https://washington.zoom.us/j/332606302 | Homework assignments: you are allowed a total of 6 late-days with at most 2 late-days per assignment | \",\n      \"CSE 344 AB | Thu 9:30-10:20 | Zoom -> https://www.google.com/url?q=https%3A%2F%2Fcanvas.uw.edu%2Fcourses%2F1371939%2Fexternal_tools%2F95443&sa=D&sntz=1&usg=AFQjCNFHsCdp-cgZBCVbZbqoFWQ7i8Hczw | \",\n      \"DRAMA 215 A | Mon Wed 15:30-17:20 | Zoom -> https://washington.zoom.us/j/258117693 | \",\n      \"CSE 473 A | Mon Wed Fri 14:30-15:20 | Ed -> https://us.edstem.org/courses/407/discussion/ | Zoom -> https://washington.zoom.us/j/916784016 | Readings -> https://courses.cs.washington.edu/courses/cse473/20sp/csenetid/readings.html | Calendar -> https://courses.cs.washington.edu/courses/cse473/20sp/calendar/calendar.html\",\n      \"CSE 492 J | Thu 12:30-13:20 | Zoom -> https://washington.zoom.us/j/255040719 \",\n      \"CSE 492 J | Tue 12:30-13:20 | Zoom -> https://washington.zoom.us/j/184769811 \",\n      \"Getup | Mon Tue Wed Thu Fri 8:30\",\n      \"Lunch | Mon Tue Wed Thu Fri Sat Sun 12:00\",\n      \"Run | Tue Thu Sat 18:00-18:30 \",\n      \"Dinner | Mon Tue Wed Thu Fri Sat Sun 19:00\",\n      \"Test | Sun 17:00\"\n    ];\n\n    let map = new Map();\n    map.set(\"Mon\", 0);\n    map.set(\"Tue\", 1);\n    map.set(\"Wed\", 2);\n    map.set(\"Thu\", 3);\n    map.set(\"Fri\", 4);\n    map.set(\"Sat\", 5);\n    map.set(\"Sun\", 6);\n\n    // clauses [1][2][3]...\n    // each day should have an array of tasks\n    let daysArray = [];\n    for (let i = 0; i < 7; i++) {\n      daysArray.push([]);\n    }\n\n    for (let str of tasks) { // one str \n      let clauses = [];\n      let taskString = [];\n      for (let item of str.split(\"|\")) {\n        item = item.trim();\n        if (item !== \"\") {\n          clauses.push(item);\n        }\n      }\n      if (clauses.length < 2) {\n        continue;\n      }\n      for (let i = 2; i < clauses.length; i++) {\n        taskString.push(clauses[i]);\n      }\n      // process this particular task with clauses\n      let times = clauses[1].split(\",\");\n      for (let time of times) {\n        time = time.trim();\n        let timeClause = time.split(\" \");\n        // timeClause: \"Wed\" \"Sat\" \"10:10-12:10\"\n        for (let dayIndex = 0; dayIndex < timeClause.length - 1; dayIndex++) {\n          let dayTask = [];\n          dayTask.push(clauses[0]);\n          dayTask.push(timeClause[timeClause.length - 1]);\n          for (let element of taskString) {\n            dayTask.push(element);\n          }\n          daysArray[map.get(timeClause[dayIndex])].push(dayTask);\n        }\n      }\n      \n    }\n\n    // console.log(daysArray);\n    this.setState({allTasks: daysArray});\n    this.UpdateDay();\n    setInterval(this.UpdateDay,1000000);\n  }\n\n  UpdateDay = () => {\n    let boolTable = [];\n    let day = (new Date().getDay() + 6) % 7;\n    for (let i = 0; i < 7; i++) {\n      if (i === day) {\n        boolTable[i] = true;\n      } else {\n        boolTable[i] = false;\n      }\n    }\n    this.setState({active: boolTable});\n  }\n\n\n  constructDays() {\n    // not ready yet\n    if (this.state.allTasks.length === 0) {\n      return;\n    }\n\n    return <div>\n      <div id=\"timeAxis\">\n        <div>7am</div>\n        <div>8am</div>\n        <div>9am</div>\n        <div>10am</div>\n        <div>11am</div>\n        <div>12pm</div>\n        <div>1pm</div>\n        <div>2pm</div>\n        <div>3pm</div>\n        <div>4pm</div>\n        <div>5pm</div>\n        <div>6pm</div>\n        <div>7pm</div>\n      </div>\n      <Day title=\"Monday\"   tasks={this.state.allTasks[0]} active={this.state.active[0]}/>\n      <Day title=\"Tuesday\"  tasks={this.state.allTasks[1]} active={this.state.active[1]}/>\n      <Day title=\"Wednesday\"  tasks={this.state.allTasks[2]} active={this.state.active[2]}/>\n      <Day title=\"Thursday\"   tasks={this.state.allTasks[3]} active={this.state.active[3]}/>\n      <Day title=\"Friday\"   tasks={this.state.allTasks[4]} active={this.state.active[4]}/>\n      <Day title=\"Saturday\"   tasks={this.state.allTasks[5]} active={this.state.active[5]}/>\n      <Day title=\"Sunday\"   tasks={this.state.allTasks[6]} active={this.state.active[6]}/>\n    </div>;\n  }\n\n  render() {\n      return (\n        <div className=\"App\">\n          {this.constructDays()}\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}